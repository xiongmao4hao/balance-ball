###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       27/Jul/2017  11:16:40
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\my\PIT.c
#    Command line =  
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\my\PIT.c -D
#        LPLD_K60 -D USE_K60DZ10 -lCN
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\FLASH\List
#        -lB
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\FLASH\List
#        -o
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\app\ -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\common\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\..\..\lib\USB\class\
#        -I C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\..\my\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\FLASH\List\PIT.lst
#    Object file  =  
#        C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\iar\FLASH\Obj\PIT.o
#
###############################################################################

C:\Users\shize\Desktop\电设\bloodc\project\balance-ball\my\PIT.c
      1          #include "PIT.H"
      2          #include "math.h"
      3          
      4          extern char start,send_;
      5          extern uint8 Is_DispPhoto;
      6          extern float adress;
      7          
      8          extern int8 angle;
      9          

   \                                 In section .text, align 2, keep-with-next
     10          void pit_isr(void)
     11          {
   \                     pit_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     12          //  if(start==1)
     13                control();
   \   00000002   0x.... 0x....      BL       control
     14          //发送位置
     15          //      char count=0;
     16          //      
     17          //      int8  send[4];
     18          //      send[count++]= 0xaa;
     19          //      send[count++]=((int16)adress)>>8;
     20          //      send[count++]=(uint8)adress;
     21          //      LPLD_UART_PutCharArr(UART4,send,count);
     22          //    LPLD_GPIO_ClearIntFlag(PORTA);
     23          //    enable_irq(PORTA_IRQn);
     24              
     25          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     26              

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   pit_isr
         8   -> control


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  pit_isr

 
 8 bytes in section .text
 
 8 bytes of CODE memory

Errors: none
Warnings: none
